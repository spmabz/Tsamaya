 apply plugin: 'com.android.application'
 apply plugin:'jacoco'
android {

    compileSdkVersion 26
    testOptions.unitTests.includeAndroidResources = true
    defaultConfig {
        applicationId "com.example.chintugandhwani.googlemap_clone_bottomsheetlayout"
        minSdkVersion 18
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug
                {
                    testCoverageEnabled true
                }
    }
    testOptions {

        unitTests.all {

            jacoco {
                includeNoLocationClasses = true

            }

        }

    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.jakewharton:butterknife:6.1.0'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.google.android.gms:play-services-maps:11.6.2'
    implementation 'com.google.android.gms:play-services-location:11.6.2'
    implementation 'com.google.android.gms:play-services-places:11.6.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    // implementation 'com.jakewharton:butterknife:6.1.0'
    implementation 'com.jakewharton:butterknife:8.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.0.0'
    implementation 'com.google.firebase:firebase-database:11.6.2'
    implementation 'com.google.firebase:firebase-auth:11.6.2'
    implementation 'com.google.firebase:firebase-firestore:11.6.2'
    implementation 'com.firebase:firebase-client-android:2.5.2'
    implementation 'com.google.maps.android:android-maps-utils:0.5'

    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation 'com.getbase:floatingactionbutton:1.10.1'
    //smiling faces
    implementation 'com.github.sujithkanna:smileyrating:1.6.8'
    testImplementation 'org.robolectric:robolectric:4.2.1'
    testImplementation 'org.robolectric:shadows-support-v4:3.0'
}

apply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin
 jacoco {
     version = '0.8.0'
 }
 tasks.withType(Test) {
     jacoco.includeNoLocationClasses = true
     jacoco.excludes = ['jdk.internal.*']
 }

 task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

     reports {
         xml.enabled = true
         html.enabled = true
     }

     def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
     def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug", excludes: fileFilter)
     def mainSrc = "$project.projectDir/src/main/java"

     sourceDirectories = files([mainSrc])
     classDirectories = files([debugTree])
     executionData = fileTree(dir: project.buildDir, includes: [
             'jacoco/testDebugUnitTest.exec', 'outputs/code_coverage/debugAndroidTest/connected/**/*.ec'
     ])
 }